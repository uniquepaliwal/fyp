<!-- Wappler include head-page="layouts/main" fontawesome_5="cdn" bootstrap5="local" is="dmx-app" id="waitingroom" appConnect="local" components="{dmxDatastore:{}}" -->
<meta name="ac:route" content="/waiting-room">
<div is="dmx-bs5-toasts" id="toasts1"></div>

<!-- Routes -->
<meta name="ac:route" content="/chatbot">

<!-- modals -->
<div class="modal" id="modal1" is="dmx-bs5-modal" tabindex="-1">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Accept the chat?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" dmx-on:click="run([{run:{name:'scAcceptChatsWaiting',outputType:'text',action:`scAcceptChatsWaiting.load({chat_id: ddChatsWaitingRoom.data.chat_room_id})`}},{run:{name:'dddeselect',outputType:'text',action:`ddChatsWaitingRoom.select(234)`}},{wait:{delay:1000}},{run:{name:'scloadchats',outputType:'text',action:`scChatListWaiting.load({})`}}])">Yes</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" dmx-on:click="">No</button>
            </div>
        </div>
    </div>
</div>


<div class="row g-0">
    <div class="col-12 d-flex">
        <!-- Card: -->
        <div class="card card-chat border-right border-top-0 border-bottom-0  w380">
            <div class="px-4 py-3 py-md-4">
                <div class="input-group mb-3">
                    <input type="text" class="form-control mb-1" id="txtSearch" placeholder="Search..." dmx-on:changed.debounce:600="scChatListWaiting.load({search: value})">
                </div>
            </div>
            <div class="tab-pane fade show active" id="chat-recent" role="tabpanel">
                <ul class="list-unstyled list-group list-group-custom list-group-flush mb-0">
                    <div dmx-repeat:rchatlist="scChatListWaiting.data.finalChatList">
                        <li class="list-group-item px-md-4 py-3 py-md-4 open" dmx-on:click="ddChatsWaitingRoom.select(chat_room_id)" dmx-class:open="ddChatsWaitingRoom.data.chat_room_id==chat_room_id">
                            <a href="javascript:void(0);" class="d-flex">
                                <div class="avatar rounded no-thumbnail">{{end_user_name.split(' ')[0].substr(0,1).uppercase()+end_user_name.split(' ')[1].substr(0,1).uppercase()}}</div>
                                <div class="flex-fill ms-3 text-truncate">
                                    <h6 class="d-flex justify-content-between mb-0">
                                        <span>{{chat_name}}</span>
                                        <small class="msg-time">{{message_time?message_time.toDate().toISODate():'New'}}</small>
                                    </h6>
                                    <div class="text-muted d-flex justify-content-between align-items-center">
                                        <span>chat with {{end_user_name}}</span>
                                        <small class="msg-time">
                                            <button class="btn btn-sm btn-primary" dmx-on:click="modal1.show()"><i class="fas fa-check"></i></button>
                                        </small>
                                    </div>
                                </div>
                            </a>
                        </li>
                    </div>
                </ul>
            </div>
            <div class="card card-chat-body border-0  w-100 px-4 px-md-5 py-3 py-md-4 d-flex justify-content-center align-items-center" dmx-show="scChatListWaiting.data.finalChatList.isEmpty()">
                <h5>No Waiting Chat available</h5>

            </div>
        </div>
        <!-- Card: -->

        <div class="card card-chat-body border-0  w-100 px-4 px-md-5 py-3 py-md-4" dmx-show="ddChatsWaitingRoom.data != null">

            <div class="chat-header d-flex justify-content-between align-items-center border-bottom pb-3">
                <div class="d-flex align-items-center">
                    <a href="javascript:void(0);" title="">
                        <div class="avatar rounded no-thumbnail">{{ddChatsWaitingRoom.data.end_user_name.split(' ')[0].substr(0,1).uppercase() + ddChatsWaitingRoom.data.end_user_name.split(' ')[1].substr(0,1).uppercase()}}</div>
                    </a>
                    <div class="ms-3">
                        <h6 class="mb-0">{{ddChatsWaitingRoom.data.chat_name}}</h6>
                        <small class="text-muted">Chat With - {{ddChatsWaitingRoom.data.end_user_name}}</small>
                    </div>
                </div>
            </div>

            <!-- Chat: body -->
            <ul id="ulChatList" class="chat-history list-unstyled mb-0 py-lg-5 py-md-4 py-3 flex-grow-1">
                <div dmx-repeat:rmessagelist="scMessagesWaiting.data.listMessages">
                    <!-- Chat: left -->
                    <li class="mb-3 d-flex flex-row align-items-end" dmx-show="By!='Me'">
                        <div class="max-width-70">
                            <div class="user-info mb-2">
                                <span class="avatar sm rounded-circle me-1 p-2" style="background-color:rgba(72, 76, 127,0.15);">
                                    {{By.split(' ')[0].substr(0,1).uppercase()+By.split(' ')[1].substr(0,1).uppercase()}}
                                </span>
                                <span class="text-muted small">{{(time.toDate().toISODate() + " , " + time.toDate().toISOTime())}}</span>
                            </div>
                            <div class="card border-0 p-3">
                                <div class="message">{{Message}}</div>
                            </div>
                        </div>
                    </li>
                    <!-- Chat: right -->
                    <li class="mb-3 d-flex flex-row-reverse align-items-end" dmx-show="By=='Me'">
                        <div class="max-width-70 text-right">
                            <div class="user-info mb-1">
                                <span class="text-muted small">{{(time.toDate().toISODate() + " , " + time.toDate().toISOTime())}}</span>
                            </div>
                            <div class="card border-0 p-3 bg-primary text-light">
                                <div class="message">{{Message}}</div>
                            </div>
                        </div>
                    </li>
                </div>
            </ul>


        </div>

        <div class="card card-chat-body border-0  w-100 px-4 px-md-5 py-3 py-md-4 d-flex justify-content-center align-items-center" dmx-show="ddChatsWaitingRoom.data == null">
            <h5>Support Chats</h5>
            <p>Powered by -</p>
            <img src="assets/images/coz-logo.jpeg" alt="" width="200">
        </div>
    </div>

</div>

<!-- old code remove after prod -->
<!-- Server Connects -->
<!-- <dmx-serverconnect id="scMessagesWaiting" url="/api/chats/chats-support-waiting" noload="true" dmx-on:success="run({runJS:{name:'scrollToBottom',outputType:'text',function:'scrollToBottom'}})"></dmx-serverconnect>
<dmx-serverconnect id="scChatListWaiting" url="/api/chats/chats-list-support-waiting" dmx-on:success=""></dmx-serverconnect>
<dmx-serverconnect id="scAddMeToChat" url="/api/chats/chats-add-me" dmx-param:chat_room_id="" noload="true" dmx-on:success="run([{run:{outputType:'text',action:`notifies_main.success(\'Chat added\')`}},{run:{name:'runSc',outputType:'text',action:`scChatListWaiting.load({})`}}])" dmx-on:forbidden="notifies_main.info('Sorry someone already took the user.')" dmx-on:error="notifies_main.danger('Something went wrong!')"></dmx-serverconnect>
<dmx-serverconnect id="scAcceptChatsWaiting" url="/api/chats/chats-accept-new" dmx-on:success="notifies_main.success('Chat accepted. Please visit chats to see it.')" dmx-on:error="notifies_main.danger('Something went wrong! Please try again after a refresh.')" noload="true" dmx-on:unauthorized="notifies_main.info('Chat already taken!');scChatListWaiting.load({})"></dmx-serverconnect> -->
<!-- DD and vars -->
<!-- <dmx-data-detail id="ddChatsWaitingRoom" dmx-bind:data="scChatListWaiting.data.finalChatList" key="chat_room_id"></dmx-data-detail>
<dmx-value id="varddChatsWaitingRoom" dmx-bind:value="ddChatsWaitingRoom.data" dmx-on:updated="run([{runJS:{name:'handleul',outputType:'text',function:'removeAllUL'}},{run:{outputType:'text',action:`scMessagesWaiting.load({chat_id: ddChatsWaitingRoom.data.chat_room_id})`}}])"></dmx-value> -->
<!-- Socket Implementation -->
<!-- <dmx-socket id="socket_main" dmx-on:connect="notifies_main.success('Connected to the server.')" dmx-on:message.chat_message="run({condition:{outputType:'boolean',if:`$event.chat_room_id==ddChatsWaitingRoom.data.chat_room_id`,then:{steps:{runJS:{name:'appendNewMessage',outputType:'text',function:'handleServerMessage',args:[`$event.message`]}}}}})" dmx-on:message.new_support_required="notifies_main.info('New Chat availbale')"></dmx-socket> -->
<!-- <script>
    function createChatLi(message,date,time,type,chatInitial="") {
            const chatLi = document.createElement("li");
            chatLi.classList.add("mb-3", "d-flex","align-item-end");
            
            let chatContent = `` ;
            if( type != 'Me'){
                chatLi.classList.add("flex-row")
                chatContent =   `<div class="max-width-70"><div class="user-info mb-2"><span class="avatar sm rounded-circle me-1 p-2" style="background-color:rgba(72, 76, 127,0.15);">
                                    ${chatInitial}
                                </span><span class="text-muted small">
                                    ${date} , ${time}
                                </span></div><div class="card border-0 p-3"><div class="message">
                                    ${message}
                                </div></div></div>`
            } else{
                chatLi.classList.add("flex-row-reverse")
                chatContent = `<div class="max-width-70 text-right"><div class="user-info mb-1"><span class="text-muted small">
                                ${date} , ${time}
                                </span></div><div class="card border-0 p-3 bg-primary text-light"><div class="message">
                                ${message}
                                </div></div></div>`
            }
            chatLi.innerHTML = chatContent;
            return chatLi;
        };
        function handleChat() {
            const chatInput = document.querySelector(".chat-message textarea");
            userMessage = chatInput.value.trim();
            chatInput.value = null;
            chatInput.placeholder = "Enter a message"
            const messageType = 'Me'
            const {utcDate,utcTime} = getUTCDateTime()
            if (!userMessage) return;
            appendMessage(userMessage,utcDate,utcTime,messageType)
        };
        function appendMessage(message,date,time,type,chatInitial=""){
            console.log(`Appending message ${message} with ${date} , ${time} , ${chatInitial} with type ${type}`);
            const chatbox = document.querySelector("#ulChatList");
            chatbox.appendChild(createChatLi(message,date,time,type,chatInitial));
            chatbox.scrollTo(0,chatbox.scrollHeight);
        }
        function scrollToBottom(){
            const chatbox = document.querySelector("#ulChatList");
            chatbox.scrollTo(0,chatbox.scrollHeight);
        }
        function getUTCDateTime() {
            const currentDate = new Date(); 
            const utcDate = currentDate.toISOString().split('T')[0]; 
            const utcTime = currentDate.toISOString().split('T')[1].split('.')[0]; 
            return { utcDate, utcTime };
        }
        function handleServerMessage(message,intials){
            console.log(`Appending message `);
            const {utcDate,utcTime} = getUTCDateTime()
            const messageType = 'Server'
            const ddChatsWaitingRoom = dmx.parse('content.ddChatsWaitingRoom.data')
            const chatInitial = ddChatsWaitingRoom.end_user_name.split(' ').map( value => value.substr(0,1).toUpperCase() ).join('');
            appendMessage(message,utcDate,utcTime,messageType,chatInitial);
        }
        function removeAllUL(){
            console.log("removing");
            const chatbox = document.querySelector("#ulChatList");
            if (chatbox) {
                chatbox.querySelectorAll(":scope > li").forEach(li => li.remove());
            }
        }
        function runJsFunc(){
            console.log("hello")
        }
</script> -->