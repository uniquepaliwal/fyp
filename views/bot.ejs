<!-- Wappler include head-page="layouts/main" fontawesome_5="cdn" bootstrap5="local" is="dmx-app" id="bot" appConnect="local" components="{dmxSockets:{}}" -->
<dmx-serverconnect id="scGetChats" url="/api/chats/chats-enduser" dmx-on:success="run({runJS:{name:'handlePreviousChats',outputType:'text',function:'handleResponse',args:[`scGetChats.data.messageListOutput`]}})"></dmx-serverconnect>
<meta name="ac:route" content="/bot">
<dmx-socket id="socket_main" dmx-on:connect="notifies_main.success('Connected to the server.')" dmx-on:message.chat_message="run({runJS:{outputType:'text',function:'appendMessage',args:[`$event.message`,`\'incoming\'`]}})"></dmx-socket>

<meta name="ac:route" content="/">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet" href="assets/css/st2.css">
<link href="https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css" rel="stylesheet">

<button class="chatbot-toggler">
    <span class="material-symbols-outlined">mode_comment</span>
    <span class="material-symbols-outlined">close</span>
</button>
<div class="chatbot">
    <div class="top-part">
        <div class="agent-details">
            <div class="agent-text">
                <h3>Support</h3>
            </div>
        </div>

        <span class="material-symbols-outlined close-btn">
            stat_minus_1
        </span>
    </div>
    <ul class="chatbox">

    </ul>
    <div class="chat-input">
        <form action="" method="post" dmx-on:submit="run([{runJS:{outputType:'text',function:'handleChat',args:[`tsend.value`]}},{run:{outputType:'text',action:`socket_main.emit(\'chat_message\',{message: tsend.value})`}}])" dmx-on:keydown.enter="apiform1.submit()" is="dmx-serverconnect-form" id="apiform1">
            <div class="row">
                <div class="col-10 me-1">
                    <textarea placeholder="Enter a message" style="display:inline-block" name="user_query" required id="tsend"></textarea>
                </div>
                <div class="col-1">
                    <button class="btn" type="submit" dmx-hide="state.executing"><span id="send-btn" type="submit" class="material-symbols-outlined">send</span></button>
                    <div class="spinner-border mt-3" role="status" dmx-show="state.executing"></div>
                </div>
            </div>
        </form>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", () => {
            const chatbotToggler = document.querySelector(".chatbot-toggler");
            const closeBtn = document.querySelector(".top-part .close-btn");
            let userMessage;
            chatbotToggler.addEventListener("click", () => document.body.classList.toggle("show-chatbot"));
            closeBtn.addEventListener("click", () => document.body.classList.remove("show-chatbot"));
        });
        function createChatLi(message, className) {
            const chatLi = document.createElement("li");
            chatLi.classList.add("chat", className);
            let chatContent = `<p>${message}</p>` ;
            chatLi.innerHTML = chatContent;
            // chatLi.querySelector("p").textContent = message;
            return chatLi;
        };
        function handleChat() {
            const chatInput = document.querySelector(".chat-input textarea");
            userMessage = chatInput.value.trim();
            chatInput.value = null;
            chatInput.placeholder = "Enter a message"
            if (!userMessage) return;
            appendMessage(userMessage,"outgoing")
        };
        function appendMessage(message,type){
            console.log(`Appending message ${message} with type ${type}`);
            const chatbox = document.querySelector(".chatbox");
            chatbox.appendChild(createChatLi(message,type));
            chatbox.scrollTo(0,chatbox.scrollHeight);
        }
        function handleResponse(messages){
            messages.forEach((message_info, index) => {
                const message = message_info['Message']
                appendMessage( message,  message_info['By'] == 'Me' ? 'outgoing' : 'incoming');
            });
        }
        
</script>
<script src="assets/js/sc.js"></script>