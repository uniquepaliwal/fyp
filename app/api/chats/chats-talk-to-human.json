{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "chat_id"
      },
      {
        "type": "text",
        "name": "user_id"
      },
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "text",
        "name": "chat_room_id"
      }
    ]
  },
  "exec": {
    "steps": {
      "name": "",
      "module": "core",
      "action": "condition",
      "options": {
        "if": "{{$_GET.user_id==null}}",
        "then": {
          "steps": {
            "name": "notAllowed",
            "module": "core",
            "action": "response",
            "options": {
              "status": 401,
              "data": "Please send the user id "
            }
          }
        },
        "else": {
          "steps": [
            {
              "name": "queryChatId",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "select",
                  "columns": [
                    {
                      "table": "p_chat_participant",
                      "column": "chat_room_id",
                      "schema": "app",
                      "recid": 1
                    }
                  ],
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_GET.user_id}}",
                      "test": ""
                    }
                  ],
                  "table": {
                    "name": "p_chat_participant",
                    "schema": "app"
                  },
                  "primary": "participant_id",
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "app.p_chat_participant.user_id",
                        "field": "app.p_chat_participant.user_id",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_GET.user_id}}",
                        "data": {
                          "table": "p_chat_participant",
                          "column": "user_id",
                          "type": "text",
                          "columnObj": {
                            "type": "reference",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "references": "user_id",
                            "inTable": "m_user",
                            "referenceType": "uuid",
                            "onUpdate": "NO ACTION",
                            "onDelete": "CASCADE",
                            "name": "user_id"
                          },
                          "schema": "app"
                        },
                        "operation": "=",
                        "table": "p_chat_participant"
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select \"chat_room_id\" from \"app\".\"p_chat_participant\" where \"app\".\"p_chat_participant\".\"user_id\" = ?"
                }
              },
              "output": false,
              "meta": [
                {
                  "type": "number",
                  "name": "chat_room_id"
                }
              ],
              "outputType": "object",
              "type": "dbconnector_single"
            },
            {
              "name": "queryNotWaiting",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "select",
                  "columns": [
                    {
                      "table": "m_chat_room",
                      "column": "not_waiting",
                      "schema": "app",
                      "recid": 1
                    }
                  ],
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{queryChatId.chat_room_id}}",
                      "test": ""
                    }
                  ],
                  "table": {
                    "name": "m_chat_room",
                    "schema": "app"
                  },
                  "primary": "chat_room_id",
                  "joins": [],
                  "query": "select \"not_waiting\" from \"app\".\"m_chat_room\" where \"app\".\"m_chat_room\".\"chat_room_id\" = ?",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "app.m_chat_room.chat_room_id",
                        "field": "app.m_chat_room.chat_room_id",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{queryChatId.chat_room_id}}",
                        "data": {
                          "table": "m_chat_room",
                          "column": "chat_room_id",
                          "type": "text",
                          "columnObj": {
                            "type": "uuid",
                            "default": "gen_random_uuid()",
                            "primary": true,
                            "unique": true,
                            "nullable": false,
                            "name": "chat_room_id"
                          },
                          "schema": "app"
                        },
                        "operation": "=",
                        "table": "m_chat_room"
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  }
                }
              },
              "output": false,
              "meta": [
                {
                  "type": "boolean",
                  "name": "not_waiting"
                }
              ],
              "outputType": "object",
              "type": "dbconnector_single"
            },
            {
              "name": "querySocketId",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "select",
                  "columns": [
                    {
                      "table": "m_user",
                      "column": "socket_id",
                      "schema": "app",
                      "recid": 1
                    }
                  ],
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_GET.user_id}}",
                      "test": ""
                    }
                  ],
                  "table": {
                    "name": "m_user",
                    "schema": "app"
                  },
                  "primary": "user_id",
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "app.m_user.user_id",
                        "field": "app.m_user.user_id",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_GET.user_id}}",
                        "data": {
                          "table": "m_user",
                          "column": "user_id",
                          "type": "text",
                          "columnObj": {
                            "type": "uuid",
                            "default": "gen_random_uuid()",
                            "primary": true,
                            "unique": true,
                            "nullable": false,
                            "name": "user_id"
                          },
                          "schema": "app"
                        },
                        "operation": "=",
                        "table": "m_user"
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select \"socket_id\" from \"app\".\"m_user\" where \"app\".\"m_user\".\"user_id\" = ?"
                }
              },
              "output": false,
              "meta": [
                {
                  "type": "text",
                  "name": "socket_id"
                }
              ],
              "outputType": "object",
              "type": "dbconnector_single"
            },
            {
              "name": "queryGptId",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "select",
                  "columns": [
                    {
                      "table": "m_user",
                      "column": "user_id",
                      "schema": "app",
                      "recid": 1
                    }
                  ],
                  "params": [],
                  "table": {
                    "name": "m_user",
                    "schema": "app"
                  },
                  "primary": "user_id",
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "app.m_user.username",
                        "field": "app.m_user.username",
                        "type": "string",
                        "operator": "equal",
                        "value": "chatGpt",
                        "data": {
                          "table": "m_user",
                          "column": "username",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": 50,
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "username"
                          },
                          "schema": "app"
                        },
                        "operation": "=",
                        "table": "m_user"
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select \"user_id\" from \"app\".\"m_user\" where \"app\".\"m_user\".\"username\" = ?"
                }
              },
              "output": false,
              "meta": [
                {
                  "type": "text",
                  "name": "user_id"
                }
              ],
              "outputType": "object",
              "type": "dbconnector_single"
            },
            {
              "name": "queryAnotherMember",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "select",
                  "columns": [
                    {
                      "table": "PCP",
                      "column": "is_active_memeber"
                    },
                    {
                      "table": "MU",
                      "column": "first_name"
                    },
                    {
                      "table": "MU",
                      "column": "last_name"
                    },
                    {
                      "table": "PCP",
                      "column": "user_id"
                    }
                  ],
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{queryChatId.chat_room_id}}",
                      "test": "af7641a1-1e62-49e4-a37c-cc43a13b6981"
                    }
                  ],
                  "table": {
                    "name": "p_chat_participant",
                    "schema": "app",
                    "alias": "PCP"
                  },
                  "primary": "participant_id",
                  "joins": [
                    {
                      "table": "m_user",
                      "column": "*",
                      "alias": "MU",
                      "type": "LEFT",
                      "clauses": {
                        "condition": "AND",
                        "rules": [
                          {
                            "table": "MU",
                            "column": "user_id",
                            "operator": "equal",
                            "operation": "=",
                            "value": {
                              "table": "PCP",
                              "column": "user_id"
                            }
                          }
                        ]
                      },
                      "primary": "user_id",
                      "schema": "app"
                    }
                  ],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "PCP.chat_room_id",
                        "field": "PCP.chat_room_id",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{queryChatId.chat_room_id}}",
                        "data": {
                          "table": "PCP",
                          "column": "chat_room_id",
                          "type": "text",
                          "columnObj": {
                            "type": "reference",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "references": "chat_room_id",
                            "inTable": "m_chat_room",
                            "referenceType": "uuid",
                            "onUpdate": "NO ACTION",
                            "onDelete": "CASCADE",
                            "name": "chat_room_id"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "MU.role_id",
                        "field": "MU.role_id",
                        "type": "double",
                        "operator": "equal",
                        "value": 1,
                        "data": {
                          "table": "MU",
                          "column": "role_id",
                          "type": "number",
                          "columnObj": {
                            "type": "integer",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "role_id"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "PCP.is_active_memeber",
                        "field": "PCP.is_active_memeber",
                        "type": "boolean",
                        "operator": "equal",
                        "value": true,
                        "data": {
                          "table": "PCP",
                          "column": "is_active_memeber",
                          "type": "boolean",
                          "columnObj": {
                            "type": "boolean",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "is_active_memeber"
                          }
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select \"PCP\".\"is_active_memeber\", \"MU\".\"first_name\", \"MU\".\"last_name\", \"PCP\".\"user_id\" from \"app\".\"p_chat_participant\" as \"PCP\" left join \"app\".\"m_user\" as \"MU\" on \"MU\".\"user_id\" = \"PCP\".\"user_id\" where \"PCP\".\"chat_room_id\" = ? and \"MU\".\"role_id\" = ? and \"PCP\".\"is_active_memeber\" = ?"
                }
              },
              "output": true,
              "meta": [
                {
                  "type": "boolean",
                  "name": "is_active_memeber"
                },
                {
                  "type": "text",
                  "name": "first_name"
                },
                {
                  "type": "text",
                  "name": "last_name"
                },
                {
                  "type": "number",
                  "name": "user_id"
                }
              ],
              "outputType": "object",
              "type": "dbconnector_single"
            },
            {
              "name": "",
              "module": "core",
              "action": "condition",
              "options": {
                "if": "{{queryAnotherMember.user_id!=null}}",
                "then": {
                  "steps": [
                    {
                      "name": "alreadyExists",
                      "module": "core",
                      "action": "setvalue",
                      "options": {
                        "key": "alreadyExists",
                        "value": "{{queryAnotherMember.first_name+' '+queryAnotherMember.last_name+'(Support Staff) is already assigned to your chat. Please wait until our support staff can get back to you!'}}"
                      },
                      "meta": [
                        {
                          "name": "is_active_memeber",
                          "type": "boolean"
                        },
                        {
                          "name": "first_name",
                          "type": "text"
                        },
                        {
                          "name": "last_name",
                          "type": "text"
                        },
                        {
                          "name": "user_id",
                          "type": "number"
                        }
                      ],
                      "outputType": "text"
                    },
                    {
                      "name": "insertGptMessage_copy",
                      "module": "dbupdater",
                      "action": "insert",
                      "options": {
                        "connection": "db",
                        "sql": {
                          "type": "insert",
                          "values": [
                            {
                              "table": "app.t_message",
                              "column": "sender_id",
                              "type": "text",
                              "value": "{{queryGptId.user_id}}",
                              "recid": 1
                            },
                            {
                              "table": "app.t_message",
                              "column": "content",
                              "type": "text",
                              "value": "{{alreadyExists}}",
                              "recid": 2
                            },
                            {
                              "table": "app.t_message",
                              "column": "created_on",
                              "type": "datetime",
                              "value": "{{NOW_UTC}}",
                              "recid": 3
                            },
                            {
                              "table": "app.t_message",
                              "column": "chat_room_id",
                              "type": "text",
                              "value": "{{queryChatId.chat_room_id}}",
                              "recid": 4
                            }
                          ],
                          "table": "app.t_message",
                          "returning": "message_id",
                          "query": "insert into \"app\".\"t_message\" (\"chat_room_id\", \"content\", \"created_on\", \"sender_id\") values (?, ?, ?, ?) returning \"message_id\"",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{queryGptId.user_id}}",
                              "test": ""
                            },
                            {
                              "name": ":P2",
                              "type": "expression",
                              "value": "{{alreadyExists}}",
                              "test": ""
                            },
                            {
                              "name": ":P3",
                              "type": "expression",
                              "value": "{{NOW_UTC}}",
                              "test": ""
                            },
                            {
                              "name": ":P4",
                              "type": "expression",
                              "value": "{{queryChatId.chat_room_id}}",
                              "test": ""
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "identity",
                          "type": "text"
                        },
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ],
                      "output": false
                    },
                    {
                      "name": "msg_copy",
                      "module": "sockets",
                      "action": "message",
                      "options": {
                        "eventName": "chat_message",
                        "params": {
                          "username": "Ai",
                          "message": "{{alreadyExists}}"
                        },
                        "socketId": "{{querySocketId.socket_id}}"
                      }
                    }
                  ]
                },
                "else": {
                  "steps": [
                    {
                      "name": "",
                      "module": "core",
                      "action": "condition",
                      "options": {
                        "if": "{{queryNotWaiting.not_waiting==1}}",
                        "then": {
                          "steps": [
                            {
                              "name": "updateWaitingStatus",
                              "module": "dbupdater",
                              "action": "update",
                              "options": {
                                "connection": "db",
                                "sql": {
                                  "type": "update",
                                  "values": [
                                    {
                                      "table": "app.m_chat_room",
                                      "column": "not_waiting",
                                      "type": "boolean",
                                      "value": "0",
                                      "recid": 1
                                    }
                                  ],
                                  "table": "app.m_chat_room",
                                  "wheres": {
                                    "condition": "AND",
                                    "rules": [
                                      {
                                        "id": "chat_room_id",
                                        "field": "chat_room_id",
                                        "type": "string",
                                        "operator": "equal",
                                        "value": "{{queryChatId.chat_room_id}}",
                                        "data": {
                                          "column": "chat_room_id"
                                        },
                                        "operation": "="
                                      }
                                    ],
                                    "conditional": null,
                                    "valid": true
                                  },
                                  "returning": "chat_room_id",
                                  "query": "update \"app\".\"m_chat_room\" set \"not_waiting\" = ? where \"chat_room_id\" = ? returning \"chat_room_id\"",
                                  "params": [
                                    {
                                      "operator": "equal",
                                      "type": "expression",
                                      "name": ":P1",
                                      "value": "{{queryChatId.chat_room_id}}",
                                      "test": ""
                                    }
                                  ]
                                }
                              },
                              "meta": [
                                {
                                  "name": "affected",
                                  "type": "number"
                                }
                              ],
                              "output": false
                            },
                            {
                              "name": "updateActiveGpt",
                              "module": "dbupdater",
                              "action": "update",
                              "options": {
                                "connection": "db",
                                "sql": {
                                  "type": "update",
                                  "values": [
                                    {
                                      "table": "app.p_chat_participant",
                                      "column": "is_active_memeber",
                                      "type": "boolean",
                                      "value": "0"
                                    },
                                    {
                                      "table": "app.p_chat_participant",
                                      "column": "last_active_time",
                                      "type": "datetime",
                                      "value": "{{NOW_UTC}}"
                                    }
                                  ],
                                  "table": "app.p_chat_participant",
                                  "wheres": {
                                    "condition": "AND",
                                    "rules": [
                                      {
                                        "id": "user_id",
                                        "field": "user_id",
                                        "type": "string",
                                        "operator": "equal",
                                        "value": "{{queryGptId.user_id}}",
                                        "data": {
                                          "column": "user_id"
                                        },
                                        "operation": "="
                                      },
                                      {
                                        "id": "chat_room_id",
                                        "field": "chat_room_id",
                                        "type": "string",
                                        "operator": "equal",
                                        "value": "{{queryChatId.chat_room_id}}",
                                        "data": {
                                          "column": "chat_room_id"
                                        },
                                        "operation": "="
                                      }
                                    ],
                                    "conditional": null,
                                    "valid": true
                                  },
                                  "returning": "participant_id",
                                  "query": "update \"app\".\"p_chat_participant\" set \"is_active_memeber\" = ?, \"last_active_time\" = ? where \"user_id\" = ? and \"chat_room_id\" = ? returning \"participant_id\"",
                                  "params": [
                                    {
                                      "name": ":P1",
                                      "type": "expression",
                                      "value": "{{NOW_UTC}}",
                                      "test": ""
                                    },
                                    {
                                      "operator": "equal",
                                      "type": "expression",
                                      "name": ":P2",
                                      "value": "{{queryGptId.user_id}}",
                                      "test": ""
                                    },
                                    {
                                      "operator": "equal",
                                      "type": "expression",
                                      "name": ":P3",
                                      "value": "{{queryChatId.chat_room_id}}",
                                      "test": ""
                                    }
                                  ]
                                }
                              },
                              "meta": [
                                {
                                  "name": "affected",
                                  "type": "number"
                                }
                              ],
                              "output": false
                            },
                            {
                              "name": "aiMessage",
                              "module": "core",
                              "action": "setvalue",
                              "options": {
                                "key": "aiMessage",
                                "value": "Please wait till we try to find you a support staff."
                              },
                              "meta": [],
                              "outputType": "text",
                              "output": false
                            }
                          ]
                        },
                        "else": {
                          "steps": {
                            "name": "aiMessageWait",
                            "module": "core",
                            "action": "setvalue",
                            "options": {
                              "key": "aiMessageWait",
                              "value": "Already looking for a support staff!"
                            },
                            "meta": [],
                            "outputType": "text",
                            "output": true
                          }
                        }
                      },
                      "outputType": "boolean",
                      "output": false
                    },
                    {
                      "name": "insertGptMessage",
                      "module": "dbupdater",
                      "action": "insert",
                      "options": {
                        "connection": "db",
                        "sql": {
                          "type": "insert",
                          "values": [
                            {
                              "table": "app.t_message",
                              "column": "sender_id",
                              "type": "text",
                              "value": "{{queryGptId.user_id}}"
                            },
                            {
                              "table": "app.t_message",
                              "column": "content",
                              "type": "text",
                              "value": "{{aiMessage.default(aiMessageWait)}}"
                            },
                            {
                              "table": "app.t_message",
                              "column": "created_on",
                              "type": "datetime",
                              "value": "{{NOW_UTC}}"
                            },
                            {
                              "table": "app.t_message",
                              "column": "chat_room_id",
                              "type": "text",
                              "value": "{{queryChatId.chat_room_id}}"
                            }
                          ],
                          "table": "app.t_message",
                          "returning": "message_id",
                          "query": "insert into \"app\".\"t_message\" (\"chat_room_id\", \"content\", \"created_on\", \"sender_id\") values (?, ?, ?, ?) returning \"message_id\"",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{queryGptId.user_id}}",
                              "test": ""
                            },
                            {
                              "name": ":P2",
                              "type": "expression",
                              "value": "{{aiMessage.default(aiMessageWait)}}",
                              "test": ""
                            },
                            {
                              "name": ":P3",
                              "type": "expression",
                              "value": "{{NOW_UTC}}",
                              "test": ""
                            },
                            {
                              "name": ":P4",
                              "type": "expression",
                              "value": "{{queryChatId.chat_room_id}}",
                              "test": ""
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "identity",
                          "type": "text"
                        },
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ],
                      "output": true
                    },
                    {
                      "name": "msg",
                      "module": "sockets",
                      "action": "message",
                      "options": {
                        "eventName": "chat_message",
                        "params": {
                          "username": "Ai",
                          "message": "{{aiMessage.default(aiMessageWait)}}"
                        },
                        "socketId": "{{querySocketId.socket_id}}"
                      }
                    },
                    {
                      "name": "emit",
                      "module": "sockets",
                      "action": "emit",
                      "options": {
                        "room": "{{room_support}}",
                        "eventName": "new_support_required"
                      }
                    }
                  ]
                }
              },
              "outputType": "boolean"
            }
          ]
        }
      },
      "outputType": "boolean"
    }
  }
}